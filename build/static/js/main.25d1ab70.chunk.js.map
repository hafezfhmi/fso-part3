{"version":3,"sources":["NotificationMessage.js","PersonForm.js","services/phonebook.js","Person.js","Persons.js","SearchFilter.js","App.js","index.js"],"names":["NotificationMessage","message","style","type","backgroundColor","color","border","padding","PersonForm","getName","newName","getNumber","newNumber","submitInput","onChange","value","onClick","baseURL","phonebookServices","getAll","axios","get","then","response","data","addPerson","newPhoneNumber","post","deletePerson","id","delete","updatePerson","updatedData","put","Person","name","number","persons","setPersons","setShowMessage","event","preventDefault","window","confirm","filter","curr","setTimeout","Persons","filterName","map","RegExp","test","SearchFilter","getFilter","App","useState","setNewName","setNewNumber","setFilterName","showMessage","useEffect","target","find","undefined","catch","concat","error","ReactDOM","render","document","getElementById"],"mappings":"0IA0BeA,EAxBa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OACE,mBACEC,MACmB,WAAjBD,EAAQE,KACJ,CACEC,gBAAiB,UACjBC,MAAO,MACPC,OAAQ,gBACRC,QAAS,OAEX,CACEH,gBAAiB,UACjBC,MAAO,QACPC,OAAQ,kBACRC,QAAS,OAbnB,SAiBGN,EAAQA,WCMAO,EAzBI,SAAC,GAMb,IALLC,EAKI,EALJA,QACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,UACAC,EACI,EADJA,YAEA,OACE,iCACE,2CACA,yCACQ,uBAAOC,SAAUL,EAASM,MAAOL,OAEzC,2CACU,uBAAOI,SAAUH,EAAWI,MAAOH,OAE7C,8BACE,wBAAQT,KAAK,SAASa,QAASH,EAA/B,uB,gBChBFI,EAAU,eA2BDC,EAPW,CACxBC,OAnBa,WACb,OAAOC,IAAMC,IAAIJ,GAASK,MAAK,SAACC,GAAD,OAAcA,EAASC,SAmBtDC,UAhBgB,SAACC,GACjB,OAAON,IAAMO,KAAKV,EAASS,GAAgBJ,MAAK,SAACC,GAAD,OAAcA,EAASC,SAgBvEI,aAbmB,SAACC,GACpB,OAAOT,IAAMU,OAAN,UAAgBb,EAAhB,YAA2BY,KAalCE,aAVmB,SAACF,EAAIG,GACxB,OAAOZ,IACJa,IADI,UACGhB,EADH,YACcY,GAAMG,GACxBV,MAAK,SAACC,GAAD,OAAcA,EAASC,UCElBU,EAnBA,SAAC,GAA+D,IAA7DC,EAA4D,EAA5DA,KAAMC,EAAsD,EAAtDA,OAAQP,EAA8C,EAA9CA,GAAIQ,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,eAYvD,OACE,wCACMJ,EADN,YACcC,GADd,IACwB,wBAAQpB,QAbjB,SAACwB,GAChBA,EAAMC,iBACOC,OAAOC,QAAP,iBAAyBR,EAAzB,QAEXjB,EAAkBU,aAAaC,GAC/BS,EAAWD,EAAQO,QAAO,SAACC,GAAD,OAAUA,EAAKhB,KAAOA,MAChDU,EAAe,CAAEtC,QAAQ,GAAD,OAAKkC,EAAL,qBAA8BhC,KAAM,WAC5D2C,YAAW,kBAAMP,EAAe,QAAO,OAMjB,wBCKbQ,EAnBC,SAAC,GAAyD,IAAvDV,EAAsD,EAAtDA,QAASW,EAA6C,EAA7CA,WAAYV,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,eAClD,OAAOF,EAAQY,KAAI,SAACJ,GAClB,OAAI,IAAIK,OAAOF,EAAY,KAAKG,KAAKN,EAAKV,MAEtC,cAAC,EAAD,CAEEA,KAAMU,EAAKV,KACXC,OAAQS,EAAKT,OACbP,GAAIgB,EAAKhB,GACTQ,QAASA,EACTC,WAAYA,EACZC,eAAgBA,GANXM,EAAKV,MAUT,SCPIiB,EATM,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,UAAWL,EAAiB,EAAjBA,WACjC,OACE,oDAEE,uBAAO7C,KAAK,OAAOW,SAAUuC,EAAWtC,MAAOiC,QC2HtCM,EA1HH,WACV,MAA8BC,mBAAS,IAAvC,mBAAOlB,EAAP,KAAgBC,EAAhB,KACA,EAA8BiB,mBAAS,IAAvC,mBAAO7C,EAAP,KAAgB8C,EAAhB,KACA,EAAkCD,mBAAS,IAA3C,mBAAO3C,EAAP,KAAkB6C,EAAlB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOP,EAAP,KAAmBU,EAAnB,KACA,EAAsCH,mBAAS,MAA/C,mBAAOI,EAAP,KAAoBpB,EAApB,KAEAqB,qBAAU,WAGR1C,EAAkBC,SAASG,MAAK,SAACC,GAC/Be,EAAWf,QAEZ,IAqFH,OACE,gCACE,2CACCoC,GAAe,cAAC,EAAD,CAAqB1D,QAAS0D,IAE9C,cAAC,EAAD,CAAcN,UAhFA,SAACb,GACjBkB,EAAclB,EAAMqB,OAAO9C,QA+EWiC,WAAYA,IAChD,cAAC,EAAD,CACEvC,QA1FU,SAAC+B,GACfgB,EAAWhB,EAAMqB,OAAO9C,QA0FpBL,QAASA,EACTC,UAxFY,SAAC6B,GACjBiB,EAAajB,EAAMqB,OAAO9C,QAwFtBH,UAAWA,EACXC,YAlFc,SAAC2B,GACnBA,EAAMC,iBAEN,IAAIT,EAAcK,EAAQyB,MAAK,SAACjB,GAAD,OAAUA,EAAKV,OAASzB,UAEnCqD,IAAhB/B,GAEFA,EAAYI,OAASxB,EAGR8B,OAAOC,QAAP,UACRX,EAAYG,KADJ,6EAMXjB,EACGa,aAAaC,EAAYH,GAAIG,GAC7BV,MAAK,SAACC,GACLgB,EAAe,CAAEtC,QAAQ,WAAD,OAAaS,GAAWP,KAAM,WACtD2C,YAAW,WACTP,EAAe,QACd,KAEHD,EACED,EAAQY,KAAI,SAACJ,GAAD,OACVA,EAAKhB,KAAOG,EAAYH,GAAKgB,EAAOtB,SAIzCyC,OAAM,SAACzC,GACNgB,EAAe,CACbtC,QAAQ,kBAAD,OAAoBS,EAApB,yCACPP,KAAM,WAER2C,YAAW,WACTP,EAAe,QACd,KACHD,EAAWD,EAAQO,QAAO,SAACC,GAAD,OAAUA,EAAKV,OAASzB,SAEtD8C,EAAW,IACXC,EAAa,OAKfvC,EACGO,UAAU,CAAEU,KAAMzB,EAAS0B,OAAQxB,IACnCU,MAAK,SAACC,GACLgB,EAAe,CAAEtC,QAAQ,SAAD,OAAWS,GAAWP,KAAM,WACpD2C,YAAW,WACTP,EAAe,QACd,KAEHD,EAAWD,EAAQ4B,OAAO1C,OAE3ByC,OAAM,SAACE,GACN3B,EAAe,CACbtC,QAASiE,EAAM3C,SAASC,KACxBrB,KAAM,WAER2C,YAAW,WACTP,EAAe,QACd,QAGPiB,EAAW,IACXC,EAAa,QAiBb,yCACA,cAAC,EAAD,CACEpB,QAASA,EACTW,WAAYA,EACZV,WAAYA,EACZC,eAAgBA,QCxHxB4B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.25d1ab70.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NotificationMessage = ({ message }) => {\r\n  return (\r\n    <p\r\n      style={\r\n        message.type === 'danger'\r\n          ? {\r\n              backgroundColor: '#f1f1f1',\r\n              color: 'red',\r\n              border: '2px solid red',\r\n              padding: '5px',\r\n            }\r\n          : {\r\n              backgroundColor: '#f1f1f1',\r\n              color: 'green',\r\n              border: '2px solid green',\r\n              padding: '5px',\r\n            }\r\n      }\r\n    >\r\n      {message.message}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default NotificationMessage;\r\n","import React from 'react';\r\n\r\nconst PersonForm = ({\r\n  getName,\r\n  newName,\r\n  getNumber,\r\n  newNumber,\r\n  submitInput,\r\n}) => {\r\n  return (\r\n    <form>\r\n      <h2>add a new</h2>\r\n      <div>\r\n        name: <input onChange={getName} value={newName} />\r\n      </div>\r\n      <div>\r\n        number: <input onChange={getNumber} value={newNumber} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" onClick={submitInput}>\r\n          add\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import axios from 'axios';\r\n// Since we are going to copy it to backend folder, base url can be relative url(same folder structure).\r\n// In dev mode, we added proxy to package.json for it to work as usual.\r\nconst baseURL = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseURL).then((response) => response.data);\r\n};\r\n\r\nconst addPerson = (newPhoneNumber) => {\r\n  return axios.post(baseURL, newPhoneNumber).then((response) => response.data);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n  return axios.delete(`${baseURL}/${id}`);\r\n};\r\n\r\nconst updatePerson = (id, updatedData) => {\r\n  return axios\r\n    .put(`${baseURL}/${id}`, updatedData)\r\n    .then((response) => response.data);\r\n};\r\n\r\nconst phonebookServices = {\r\n  getAll,\r\n  addPerson,\r\n  deletePerson,\r\n  updatePerson,\r\n};\r\n\r\nexport default phonebookServices;\r\n","import React from 'react';\r\nimport phonebookServices from './services/phonebook';\r\n\r\nconst Person = ({ name, number, id, persons, setPersons, setShowMessage }) => {\r\n  const deletion = (event) => {\r\n    event.preventDefault();\r\n    let answer = window.confirm(`Delete ${name}?`);\r\n    if (answer) {\r\n      phonebookServices.deletePerson(id);\r\n      setPersons(persons.filter((curr) => curr.id !== id));\r\n      setShowMessage({ message: `${name} has been deleted`, type: 'danger' });\r\n      setTimeout(() => setShowMessage(null), 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <p>\r\n      {`${name} ${number}`} <button onClick={deletion}>delete</button>\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React from 'react';\r\nimport Person from './Person';\r\n\r\nconst Persons = ({ persons, filterName, setPersons, setShowMessage }) => {\r\n  return persons.map((curr) => {\r\n    if (new RegExp(filterName, 'i').test(curr.name)) {\r\n      return (\r\n        <Person\r\n          key={curr.name}\r\n          name={curr.name}\r\n          number={curr.number}\r\n          id={curr.id}\r\n          persons={persons}\r\n          setPersons={setPersons}\r\n          setShowMessage={setShowMessage}\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  });\r\n};\r\n\r\nexport default Persons;\r\n","import React from 'react';\r\n\r\nconst SearchFilter = ({ getFilter, filterName }) => {\r\n  return (\r\n    <div>\r\n      filter shown with\r\n      <input type=\"text\" onChange={getFilter} value={filterName} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchFilter;\r\n","import React, { useState, useEffect } from 'react';\r\nimport NotificationMessage from './NotificationMessage';\r\nimport PersonForm from './PersonForm';\r\nimport Persons from './Persons';\r\nimport SearchFilter from './SearchFilter';\r\nimport phonebookServices from './services/phonebook';\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState('');\r\n  const [newNumber, setNewNumber] = useState('');\r\n  const [filterName, setFilterName] = useState('');\r\n  const [showMessage, setShowMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // getAll executed and .then is chained afterwards\r\n    // more like axios.get().then().then()\r\n    phonebookServices.getAll().then((response) => {\r\n      setPersons(response);\r\n    });\r\n  }, []);\r\n\r\n  const getName = (event) => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const getNumber = (event) => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const getFilter = (event) => {\r\n    setFilterName(event.target.value);\r\n  };\r\n\r\n  const submitInput = (event) => {\r\n    event.preventDefault();\r\n    // We compare new data with persons array to see if its already in array\r\n    let updatedData = persons.find((curr) => curr.name === newName);\r\n\r\n    if (updatedData !== undefined) {\r\n      // We change the number with the new number\r\n      updatedData.number = newNumber;\r\n\r\n      // alert(`${newName} is already added to phonebook`);\r\n      let answer = window.confirm(\r\n        `${updatedData.name} is already added to phonebook, replace the old number with a new one?`\r\n      );\r\n\r\n      if (answer) {\r\n        // We update the data on the server using updatePerson and then we update the person state for the changed person\r\n        phonebookServices\r\n          .updatePerson(updatedData.id, updatedData)\r\n          .then((response) => {\r\n            setShowMessage({ message: `Updated ${newName}`, type: 'normal' });\r\n            setTimeout(() => {\r\n              setShowMessage(null);\r\n            }, 3000);\r\n\r\n            setPersons(\r\n              persons.map((curr) =>\r\n                curr.id !== updatedData.id ? curr : response\r\n              )\r\n            );\r\n          })\r\n          .catch((response) => {\r\n            setShowMessage({\r\n              message: `Information of ${newName} has already been removed from server`,\r\n              type: 'danger',\r\n            });\r\n            setTimeout(() => {\r\n              setShowMessage(null);\r\n            }, 3000);\r\n            setPersons(persons.filter((curr) => curr.name !== newName));\r\n          });\r\n        setNewName('');\r\n        setNewNumber('');\r\n      }\r\n    } else {\r\n      // We post data to the server and we also do setPersons because our data is only fetched at initial render \\\r\n      // (Modified setPersons to use response data instead)\r\n      phonebookServices\r\n        .addPerson({ name: newName, number: newNumber })\r\n        .then((response) => {\r\n          setShowMessage({ message: `Added ${newName}`, type: 'normal' });\r\n          setTimeout(() => {\r\n            setShowMessage(null);\r\n          }, 3000);\r\n\r\n          setPersons(persons.concat(response));\r\n        })\r\n        .catch((error) => {\r\n          setShowMessage({\r\n            message: error.response.data,\r\n            type: 'danger',\r\n          });\r\n          setTimeout(() => {\r\n            setShowMessage(null);\r\n          }, 3000);\r\n        });\r\n\r\n      setNewName('');\r\n      setNewNumber('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      {showMessage && <NotificationMessage message={showMessage} />}\r\n\r\n      <SearchFilter getFilter={getFilter} filterName={filterName} />\r\n      <PersonForm\r\n        getName={getName}\r\n        newName={newName}\r\n        getNumber={getNumber}\r\n        newNumber={newNumber}\r\n        submitInput={submitInput}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Persons\r\n        persons={persons}\r\n        filterName={filterName}\r\n        setPersons={setPersons}\r\n        setShowMessage={setShowMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}